{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useInflacion = () => {\n  _s();\n  const [inflacionMensual, setInflacionMensual] = useState({});\n  const [inflacionAnual, setInflacionAnual] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseMensual = await fetch(\"http://127.0.0.1:8000/api/brca/inflacion_mensual\");\n        const dataMensual = await responseMensual.json();\n        // console.log(dataMensual);\n        setInflacionMensual(dataMensual);\n        const responseAnual = await fetch(\"http://127.0.0.1:8000/api/brca/inflacion_anual\");\n        const dataAnual = await responseAnual.json();\n        // console.log(dataAnual);\n        setInflacionAnual(dataAnual);\n      } catch (error) {\n        console.log(\"Error al obtener los datos de inflación:\", \" Intendadolo de nuevo.\", {\n          error\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  return {\n    inflacionMensual,\n    inflacionAnual\n  };\n};\n_s(useInflacion, \"XE0mFwC08GH2i2xymIsSA63ukM4=\");\nexport default useInflacion;","map":{"version":3,"names":["useState","useEffect","useInflacion","_s","inflacionMensual","setInflacionMensual","inflacionAnual","setInflacionAnual","fetchData","responseMensual","fetch","dataMensual","json","responseAnual","dataAnual","error","console","log"],"sources":["/Users/jacobdominguez/Desktop/finance/client/src/hooks/useInflacion.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useInflacion = () => {\n  const [inflacionMensual, setInflacionMensual] = useState({});\n  const [inflacionAnual, setInflacionAnual] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseMensual = await fetch(\"http://127.0.0.1:8000/api/brca/inflacion_mensual\");\n        const dataMensual = await responseMensual.json();\n        // console.log(dataMensual);\n        setInflacionMensual(dataMensual);\n\n        const responseAnual = await fetch(\"http://127.0.0.1:8000/api/brca/inflacion_anual\");\n        const dataAnual = await responseAnual.json();\n        // console.log(dataAnual);\n        setInflacionAnual(dataAnual);\n      } catch (error) {\n        console.log(\"Error al obtener los datos de inflación:\", \" Intendadolo de nuevo.\", {\n          error,\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { inflacionMensual, inflacionAnual };\n};\n\nexport default useInflacion;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,kDAAkD,CAAC;QACvF,MAAMC,WAAW,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;QAChD;QACAP,mBAAmB,CAACM,WAAW,CAAC;QAEhC,MAAME,aAAa,GAAG,MAAMH,KAAK,CAAC,gDAAgD,CAAC;QACnF,MAAMI,SAAS,GAAG,MAAMD,aAAa,CAACD,IAAI,CAAC,CAAC;QAC5C;QACAL,iBAAiB,CAACO,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE,wBAAwB,EAAE;UAChFF;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,gBAAgB;IAAEE;EAAe,CAAC;AAC7C,CAAC;AAACH,EAAA,CA3BID,YAAY;AA6BlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}